-- a.	Find the titles of all books by Pratchett that cost less than $10
SELECT B.title
FROM BOOK B
JOIN WRITTEN_BY WB on B.isbn = WB.isbn
JOIN AUTHOR A on A.author_id = WB.author_id
JOIN NAME N on A.name_id = N.name_id
WHERE N.lname = 'Pratchett' AND B.sales_price < 10;

-- b.	Give all the titles and their dates of purchase
-- made by a single customer (you choose how to designate the customer) (USER_ID = 50)
SELECT B.title, O.sale_date
FROM BOOK B
JOIN BOOK_ORDER BO on B.isbn = BO.isbn
JOIN "ORDER" O ON O.order_id = BO.order_id
JOIN USER U on O.customer_id = U.user_id
WHERE U.user_id = 50;

-- c.	Find the titles and ISBNs for all books with less than 5 copies in stock
SELECT B.title, B.isbn, sum(WS.quantity) AS stock
FROM BOOK B
JOIN WAREHOUSE_STOCK WS on B.isbn = WS.isbn
GROUP BY WS.isbn
HAVING sum(WS.quantity) < 5;

-- d.	Give all the customers who purchased a book by Pratchett
-- and the titles of Pratchett books they purchased
SELECT NUser.fname, NUser.lname, B.title
FROM NAME NUser
JOIN USER U on NUser.name_id = U.name_id
JOIN "ORDER" on U.user_id = "ORDER".customer_id
JOIN BOOK_ORDER BO on "ORDER".order_id = BO.order_id
JOIN BOOK B on BO.isbn = B.isbn
JOIN WRITTEN_BY WB on B.isbn = WB.isbn
JOIN AUTHOR A on WB.author_id = A.author_id
JOIN NAME NAuth on A.name_id = NAuth.name_id
WHERE NAuth.lname = 'Pratchett';

-- e. Find the total number of books purchased by a single customer
-- (you choose how to designate the customer) (USER_ID = 50)
SELECT U.user_id, N.fname, N.lname, sum(BO.quantity) as books_purchased
FROM USER U
JOIN NAME N on U.name_id = N.name_id
JOIN "ORDER" O on O.customer_id = U.user_id
JOIN BOOK_ORDER BO on O.order_id = BO.order_id
WHERE U.user_id = 50;

-- f. Find the customer who has purchased the most books and
-- the total number of books they have purchased
SELECT U.user_id, N.fname, N.lname, sum(BO.quantity) as books_purchased
FROM USER U
JOIN NAME N on U.name_id = N.name_id
JOIN "ORDER" O on O.customer_id = U.user_id
JOIN BOOK_ORDER BO on O.order_id = BO.order_id
GROUP BY U.user_id, N.fname, N.lname
HAVING books_purchased = (SELECT max(total_books)
                          FROM (SELECT sum(B.quantity) as total_books
                                FROM USER U2
                                JOIN "ORDER" ON U2.user_id = "ORDER".customer_id
                                JOIN BOOK_ORDER B on "ORDER".order_id = B.order_id
                                GROUP BY user_id));